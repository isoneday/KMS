<?php

/**
 * @author Prima Noor 
 */
class ViewCity extends HtmlResponse {

    function TemplateModule() {
        $this->SetTemplateBasedir(Configuration::Instance()->GetValue('application', 'docroot') . 'module/' . GtfwDispt()->mModule . '/template');
        $this->SetTemplateFile('view_city.html');
    }

    function ProcessRequest() {
        $ObjCity = GtfwDispt()->load->business('City', 'ref.city');
        $ObjSetting = GtfwDispt()->load->business('Setting', 'core.setting');

        $msg = Messenger::Instance()->Receive(__file__);
        $filter_data = isset($msg[0][0]) ? $msg[0][0] : null;
        $pesan['pesan'] = isset($msg[1][1]) ? $msg[1][1] : null;
        $pesan['style'] = isset($msg[1][2]) ? $msg[1][2] : null;

        if (!isset($_GET['display']) || empty($filter_data)) {
            $page = 1;
            $start = 0;
            $display = $ObjSetting->getValue('view_per_page');
            $filter = compact('page', 'display', 'start');
        } elseif ($_GET['display']->Raw() != '') {
            $page = (int) $_GET['page']->SqlString()->Raw();
            $display = (int) $_GET['display']->SqlString()->Raw();

            if ($page < 1)
                $page = 1;
            if ($display < 1)
                $display = $ObjSetting->getValue('view_per_page');
            $start = ($page - 1) * $display;

            $filter = compact('page', 'display', 'start');
            $filter += $filter_data;
        } else {
            $filter = $filter_data;
            $page = $filter['page'];
            $display = $filter['display'];
            $start = $filter['start'];
        }

        $post_data = $_POST->AsArray();
        if (!empty($post_data)) {
            foreach ($post_data as $key => $value)
                $filter[$key] = $value;
            $filter['start'] = 0;
            $filter['page'] = $page = 1;
        }
        
        Messenger::Instance()->SendToComponent('ref.country', 'comboCountry', 'view', 'html', 'country', array(
            'dataId' => (!empty($filter['country']) ? $filter['country'] : null),
            'elmId' => 'country',
            'name' => 'country',
            'first' => 'select',
            'showAdd' => false), Messenger::CurrentRequest);
        Messenger::Instance()->SendToComponent('ref.state', 'comboState', 'view', 'html', 'state_id', array(
            'dataId' => (!empty($filter['state_id']) ? $filter['state_id'] : null),
            'elmId' => 'state_id',
            'name' => 'state_id',
            'first' => 'select',
            'showAdd' => false,
            'country_id' => (!empty($filter['country']) ? $filter['country'] : null)), Messenger::CurrentRequest);

        $list_category = array(array('id' => 'city', 'name' => GtfwLangText('city')), array('id' => 'district', 'name' => GtfwLangText('district')));
        Messenger::Instance()->SendToComponent('comp.combobox', 'Combobox', 'view', 'html', 'category', array(
            'category',
            $list_category,
            (!empty($filter['category']) ? $filter['category'] : ''),
            'false',
            ' style=""'), Messenger::CurrentRequest);

        Messenger::Instance()->Send(Dispatcher::Instance()->mModule, Dispatcher::Instance()->mSubModule, Dispatcher::Instance()->mAction, Dispatcher::Instance()->mType, array($filter), Messenger::UntilFetched);

        $data = $ObjCity->getCity($filter);
        $total = $ObjCity->countCity();

        $url = Dispatcher::Instance()->GetUrl(Dispatcher::Instance()->mModule, Dispatcher::Instance()->mSubModule, Dispatcher::Instance()->mAction, Dispatcher::Instance()->mType);
        Messenger::Instance()->SendToComponent('comp.paging', 'Paging', 'view', 'html', 'paging_top', array(
            $display,
            $total,
            $url,
            $page), Messenger::CurrentRequest);
        Messenger::Instance()->SendToComponent('comp.paging', 'Paging', 'view', 'html', 'paging_bottom', array(
            $display,
            $total,
            $url,
            $page), Messenger::CurrentRequest);

        return compact('data', 'pesan', 'filter');
    }

    function ParseTemplate($rdata = null) {
        $this->ButtonRendering();
        extract($rdata);
        
        $this->mrTemplate->addGlobalVar('LANG_MODULE', GtfwLangText('city'));

        if (!empty($pesan)) {
            $this->mrTemplate->addVars('pesan', $pesan);
        }

        $this->mrTemplate->addVar('search', 'URL', GtfwDispt()->GetCurrentUrl().'&display');
        if (!empty($filter)) {
            $this->mrTemplate->addVars('search', $filter);
        }

        if (!empty($data) and count($data) > 0) {
            $this->mrTemplate->addVar('data', 'IS_EMPTY', 'NO');
            $no = $filter['start'] + 1;
            foreach ($data as $val) {
                $val['no'] = $no;
                $val['url_detail'] = GtfwDispt()->GetUrl('ref.city', 'detailCity', 'view', 'html') . '&id=' . Dispatcher::Instance()->Encrypt($val['id']);
                $val['status'] == 1 ? $val['status'] = GtfwLangText('active') : $val['status'] = GtfwLangText('not_active');
                $val['category'] == 'city' ? $val['category'] = GtfwLangText('city') : $val['category'] = GtfwLangText('district');

                $this->mrTemplate->clearTemplate('button_update');
                $this->mrTemplate->addVar('button_update', 'URL', GtfwDispt()->GetUrl('ref.city', 'updateCity', 'view', 'html') . '&id=' . Dispatcher::Instance()->Encrypt($val['id']));

                $this->mrTemplate->clearTemplate('button_delete');
                $this->mrTemplate->addVar('button_delete', 'NAME', $val['name']);
                $this->mrTemplate->addVar('button_delete', 'URL', GtfwDispt()->GetUrl('ref.city', 'deleteCity', 'do', 'json') . '&id=' . Dispatcher::Instance()->Encrypt($val['id']));

                $this->mrTemplate->addVars('item', $val);
                $this->mrTemplate->parseTemplate('item', 'a');
                $no++;
            }
        } else {
            $this->mrTemplate->addVar('data', 'IS_EMPTY', 'YES');
        }

        $this->mrTemplate->addVar('content', 'URL_COUNTRY', GtfwDispt()->GetUrl('ref.country', 'comboCountry', 'view', 'html') . '&ascomponent=1');
        $this->mrTemplate->addVar('search', 'URL_STATE', GtfwDispt()->GetUrl('ref.state', 'comboState', 'view', 'html') . '&ascomponent=1');
        $this->mrTemplate->addVar('button_add', 'URL', GtfwDispt()->GetUrl('ref.city', 'addCity', 'view', 'html'));
    }

}

?>