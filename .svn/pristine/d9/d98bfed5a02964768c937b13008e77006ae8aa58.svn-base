<?php

/**
 * @author Prima Noor 
 */
class ViewInputType extends HtmlResponse {

    function TemplateModule() {
        $this->SetTemplateBasedir(Configuration::Instance()->GetValue('application', 'docroot') . 'module/' . GtfwDispt()->mModule . '/template');
        $this->SetTemplateFile('view_input_type.html');
    }

    function ProcessRequest() {
        $ObjType = GtfwDispt()->load->business('PhotoType', 'ref.photo.type');
        $ObjMst = GtfwDispt()->load->business('MasterType', 'ref.master.type');

        $id = Dispatcher::Instance()->Decrypt($_GET['id']->Raw());
        unset($_SESSION['photo_type']['data_id']);
        if (!empty($id)) $_SESSION['photo_type']['data_id'] = $id;
        $elmId = $_GET['elmId']->SqlString()->Raw();

        $msg = Messenger::Instance()->Receive(__FILE__);
        $post = isset($msg[0][0]) ? $msg[0][0] : NULL;
        $message['content'] = isset($msg[0][1]) ? $msg[0][1] : NULL;
        $message['style'] = isset($msg[0][2]) ? $msg[0][2] : NULL;

        if (!empty($post)) {
            $input = $post;
        } elseif (!empty($id)) {
            $input = $ObjType->getDetailType($id);
        }

        $list_master = $ObjMst->listType();
        Messenger::Instance()->SendToComponent('comp.combobox', 'Combobox', 'view', 'html', 'mst_id', array(
            'mst_id',
            $list_master,
            (!empty($input['mst_id']) ? $input['mst_id'] : ''),
            'false',
            ' style=""'), Messenger::CurrentRequest);

        return compact('input', 'id', 'message', 'elmId');
    }

    function ParseTemplate($rdata = NULL) {
        extract($rdata);

        if (!empty($message)) {
            $this->mrTemplate->addVars('message', $message);
        }

//        if (!empty($input) AND $input['is_locked'] == 1) {
//            $input['IS_LOCKED'] = 'checked="checked"';
//        }

        $status = 'checked="checked"';
        $nstatus = '';

        if (isset($input['status']) && $input['status'] != '1') {
            $status = '';
            $nstatus = 'checked="checked"';
        }

        if (!empty($input)) {
            $this->mrTemplate->addVars('content', $input);
        }

        $this->mrTemplate->AddVar('content', 'STATUS', $status);
        $this->mrTemplate->AddVar('content', 'NSTATUS', $nstatus);

        $this->mrTemplate->addVar('content', 'URL_BACK', GtfwDispt()->GetUrl('ref.photo.type', 'type', 'view', 'html') . '&display');
        $this->mrTemplate->addVar('content', 'URL', GtfwDispt()->GetUrl('ref.photo.type', (empty($id) ? 'add' : 'update') . 'Type', 'do', 'json') . '&elmId=' . $elmId);
    }

}

?>